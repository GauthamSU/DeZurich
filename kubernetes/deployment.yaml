apiVersion: apps/v1
kind: Deployment
metadata:
  name: lounge-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: lounge-app
  template:
    metadata:
      labels:
        app: lounge-app
    spec:
      containers:
      - name: lounge-app
        image: asia-south1-docker.pkg.dev/dezurich-lounge/lounge-docker-images/lounge:v1
        # resources:
        #   limits:
        #     cpu: "100m"  # Limit CPU usage to 100 millicores
        #     memory: "0.5Gi"  # Limit memory usage to 2 Gigabytes
        imagePullPolicy: Always
        envFrom:
          - secretRef:
              name: postgres-credentials
          - secretRef:
              name: cloudsql-oauth-credentials
          - configMapRef:
              name: django-config
        volumeMounts:
          - name: cloudsql-oauth-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
        ports:
        - containerPort: 8000
          name: gunicorn
          
      # [START proxy_container]
      - image: gcr.io/cloudsql-docker/gce-proxy:1.16
        name: cloudsql-proxy
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-instances=dezurich-lounge:asia-south1:lounge-database=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        # resources:
        #   limits:
        #     cpu: "100m"  # Limit CPU usage to 100 millicores
        #     memory: "0.5Gi"  # Limit memory usage to 2 Gigabytes
        volumeMounts:
          - name: cloudsql-oauth-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: postgres-credentials
            mountPath: /cloudsql
      # [END proxy_container] 
      # [START volumes]
      volumes:
        - name: cloudsql-oauth-credentials
          secret:
            secretName: cloudsql-oauth-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: postgres-credentials
          emptyDir: {}
      # [END volumes]        
# [END kubernetes_deployment]
